package GUI;

import static GUI.ScheduleUI.scheduleUI;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Frame;
import java.awt.Label;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Ramith Gunawardana
 */
public class DashboardUI extends javax.swing.JFrame {
    JFrame dashboard = null;
    private String username = "User";
    private int userRole = 0;
    /**
     * Creates new form Dashboard
     */
    public DashboardUI(String username, int role) {
        //all frames to a array
        Frame[] allFrames = Frame.getFrames();

        //Iterate through the allFrames array
        for(Frame fr : allFrames){
            //uncomment the below line to see frames names and properties/atr.
//            System.out.println(fr);        

            //to get specific frame name
            String specificFrameName = fr.getClass().getName();

            if(specificFrameName.equals("GUI.DashboardUI")){
                dashboard = (JFrame) fr;
            }
        }
        
        
        this.username = username;
        this.userRole = role;
        
        ImageIcon icon = new ImageIcon(getClass().getResource("/Images/icon.png"));
        this.setIconImage(icon.getImage());
        initComponents();
        currentdate();
        setGreetingMsg();
        uac();
    }
    
    
    // function to display current date
    public void currentdate(){
        DateTimeFormatter dtformat = DateTimeFormatter.ofPattern("E, dd MMM yyyy");
        LocalDateTime now = LocalDateTime.now();
        lblDateTime.setText(dtformat.format(now));
    }
    
    public String getUsername(){
        return this.username;
    }
    
    public void setGreetingMsg(){
        lblGreeting.setText("Welcome, " + getUsername() + "!");
    }
    
    public int getUserRole(){
        return this.userRole;
    }
    
    private void uac(){
        int role = getUserRole();
        
        if(role==1){ //admin
            btnUser.setVisible(true);
        }else{ //fac member/staff
            btnUser.setVisible(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblGreeting = new javax.swing.JLabel();
        lblDateTime = new javax.swing.JLabel();
        btnSchedule = new javax.swing.JButton();
        btnClassroom = new javax.swing.JButton();
        btnResource = new javax.swing.JButton();
        btnSignOut = new javax.swing.JButton();
        btnUser = new javax.swing.JButton();
        bgImg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dashboard");
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 850, 550));
        setMinimumSize(new java.awt.Dimension(700, 540));
        setPreferredSize(new java.awt.Dimension(700, 540));
        setSize(new java.awt.Dimension(700, 540));
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dashbaord");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(80, 30, 540, 32);

        lblGreeting.setBackground(new java.awt.Color(255, 255, 255));
        lblGreeting.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblGreeting.setForeground(new java.awt.Color(255, 255, 255));
        lblGreeting.setText("Welcome, User!");
        getContentPane().add(lblGreeting);
        lblGreeting.setBounds(80, 90, 240, 25);

        lblDateTime.setBackground(new java.awt.Color(255, 255, 255));
        lblDateTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDateTime.setForeground(new java.awt.Color(255, 255, 255));
        lblDateTime.setText("Date & Time");
        getContentPane().add(lblDateTime);
        lblDateTime.setBounds(80, 120, 240, 20);

        btnSchedule.setBackground(new java.awt.Color(18, 93, 222));
        btnSchedule.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSchedule.setForeground(new java.awt.Color(255, 255, 255));
        btnSchedule.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/schedule.png"))); // NOI18N
        btnSchedule.setText("  Schedules");
        btnSchedule.setToolTipText("Click to see schedules");
        btnSchedule.setBorder(null);
        btnSchedule.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScheduleActionPerformed(evt);
            }
        });
        getContentPane().add(btnSchedule);
        btnSchedule.setBounds(220, 190, 260, 70);

        btnClassroom.setBackground(new java.awt.Color(6, 127, 212));
        btnClassroom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnClassroom.setForeground(new java.awt.Color(255, 255, 255));
        btnClassroom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/classroom.png"))); // NOI18N
        btnClassroom.setText("  Classrooms");
        btnClassroom.setToolTipText("Click to see classrooms and subjects");
        btnClassroom.setBorder(null);
        btnClassroom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClassroom.setOpaque(true);
        btnClassroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClassroomActionPerformed(evt);
            }
        });
        getContentPane().add(btnClassroom);
        btnClassroom.setBounds(220, 290, 260, 70);

        btnResource.setBackground(new java.awt.Color(89, 74, 189));
        btnResource.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnResource.setForeground(new java.awt.Color(255, 255, 255));
        btnResource.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/resource.png"))); // NOI18N
        btnResource.setText("  Resources");
        btnResource.setToolTipText("Click to see resources of classrooms");
        btnResource.setBorder(null);
        btnResource.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResourceActionPerformed(evt);
            }
        });
        getContentPane().add(btnResource);
        btnResource.setBounds(220, 390, 260, 70);

        btnSignOut.setBackground(new java.awt.Color(1, 86, 144));
        btnSignOut.setForeground(new java.awt.Color(255, 255, 255));
        btnSignOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout.png"))); // NOI18N
        btnSignOut.setText("Sign out ");
        btnSignOut.setToolTipText("Click to sign out of the application");
        btnSignOut.setBorder(null);
        btnSignOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });
        getContentPane().add(btnSignOut);
        btnSignOut.setBounds(520, 100, 100, 30);

        btnUser.setBackground(new java.awt.Color(28, 82, 152));
        btnUser.setForeground(new java.awt.Color(255, 255, 255));
        btnUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/user.png"))); // NOI18N
        btnUser.setText("Manage Users ");
        btnUser.setToolTipText("Click to see users");
        btnUser.setBorder(null);
        btnUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserActionPerformed(evt);
            }
        });
        getContentPane().add(btnUser);
        btnUser.setBounds(380, 100, 130, 30);

        bgImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg2.png"))); // NOI18N
        bgImg.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(bgImg);
        bgImg.setBounds(0, 0, 700, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScheduleActionPerformed
        // TODO add your handling code here:
        dashboard.setState(JFrame.ICONIFIED);
        
        JDialog d = new JDialog(scheduleUI);
        d.setSize(200, 80);
        Label l = new Label("Loading...");
        l.setAlignment(Label.CENTER);
        d.add(l);
        d.setAlwaysOnTop(true);
        d.setLocationRelativeTo(null);
        d.setVisible(true);
        
        ScheduleUI frame = new ScheduleUI(getUserRole(),dashboard);
        
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        
        d.setVisible(false);
        
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (true){
                    frame.setDefaultCloseOperation(ScheduleUI.DISPOSE_ON_CLOSE);
                    dashboard.setState(JFrame.NORMAL);
                }
            }
        });
        
    }//GEN-LAST:event_btnScheduleActionPerformed

    private void btnClassroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClassroomActionPerformed
        // TODO add your handling code here:
        dashboard.setState(JFrame.ICONIFIED);
        
        JDialog d = new JDialog(scheduleUI);
        d.setSize(200, 80);
        Label l = new Label("Loading...");
        l.setAlignment(Label.CENTER);
        d.add(l);
        d.setAlwaysOnTop(true);
        d.setLocationRelativeTo(null);
        d.setVisible(true);
        
        ClassroomUI frame = new ClassroomUI(getUserRole(),dashboard);
//        fr.setEnabled(false);
        
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        
        d.setVisible(false);
        
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (true){
                    frame.setDefaultCloseOperation(ScheduleUI.DISPOSE_ON_CLOSE);
                    dashboard.setState(JFrame.NORMAL);
                }
            }
        });
    }//GEN-LAST:event_btnClassroomActionPerformed

    private void btnResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResourceActionPerformed
        // TODO add your handling code here:
        dashboard.setState(JFrame.ICONIFIED);
        
        JDialog d = new JDialog(scheduleUI);
        d.setSize(200, 80);
        Label l = new Label("Loading...");
        l.setAlignment(Label.CENTER);
        d.add(l);
        d.setAlwaysOnTop(true);
        d.setLocationRelativeTo(null);
        d.setVisible(true);
        
        ResourceUI frame = new ResourceUI(getUserRole(),dashboard);
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        
        d.setVisible(false);
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (true){
                    frame.setDefaultCloseOperation(ScheduleUI.DISPOSE_ON_CLOSE);
                    dashboard.setState(JFrame.NORMAL);
                }
            }
        });
    }//GEN-LAST:event_btnResourceActionPerformed

    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        // TODO add your handling code here:
        JDialog d = new JDialog(scheduleUI);
        d.setSize(200, 80);
        Label l = new Label("Loading...");
        l.setAlignment(Label.CENTER);
        d.add(l);
        d.setAlwaysOnTop(true);
        d.setLocationRelativeTo(null);
        d.setVisible(true);
        
        SignInUI signIn = new SignInUI();
        this.setVisible(false);
        signIn.setResizable(false);
        signIn.setLocationRelativeTo(null);
        signIn.setVisible(true);
        
        d.setVisible(false);
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void btnUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserActionPerformed
        // TODO add your handling code here:
        
        dashboard.setState(JFrame.ICONIFIED);
        
        JDialog d = new JDialog(scheduleUI);
        d.setSize(200, 80);
        Label l = new Label("Loading...");
        l.setAlignment(Label.CENTER);
        d.add(l);
        d.setAlwaysOnTop(true);
        d.setLocationRelativeTo(null);
        d.setVisible(true);
        
        UserUI frame = new UserUI(getUsername(),getUserRole(),dashboard);
//        fr.setEnabled(false);
        
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        
        d.setVisible(false);
        
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (true){
                    frame.setDefaultCloseOperation(ScheduleUI.DISPOSE_ON_CLOSE);
                    dashboard.setState(JFrame.NORMAL);
                }
            }
        });
    }//GEN-LAST:event_btnUserActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(new FlatDarkLaf());
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(DashboardUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                DashboardUI frame = new DashboardUI("TestUser", 1);
                frame.setResizable(false);
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgImg;
    private javax.swing.JButton btnClassroom;
    private javax.swing.JButton btnResource;
    private javax.swing.JButton btnSchedule;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JButton btnUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblDateTime;
    private javax.swing.JLabel lblGreeting;
    // End of variables declaration//GEN-END:variables
}
